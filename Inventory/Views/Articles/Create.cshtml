@model Inventory.Models.Article

@{
    ViewBag.Title = "Create";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>
    
    var base64 = "";

    function getDataUri(url, callback) {
        var image = new Image();
        
        image.onload = function () {
            var canvas = document.createElement('canvas');
            canvas.width = this.naturalWidth; // or 'width' if you want a special/scaled size
            canvas.height = this.naturalHeight; // or 'height' if you want a special/scaled size

            canvas.getContext('2d').drawImage(this, 0, 0);

            // Get raw image data
            callback(canvas.toDataURL('image/png').replace(/^data:image\/(png|jpg);base64,/, ''));

            // ... or get as Data URI
            callback(canvas.toDataURL('image/png'));
        };

        image.src = url;
    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#preview').attr('src', e.target.result);
                base64 = e.target.result;
                base64 = base64.replace('-', '+');
                base64 = base64.replace('_', '/');
                base64 = base64.split(",");
            
                $('[name="MemeType"]').val(base64[0]);
                $('[name="PhotographyOfArticle"]').val(base64[1]);
                console.log("Meme :" + $('[name="MemeType"]').val());
                console.log("Image:" + $('[name="PhotographyOfArticle"]').val());
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $(document).ready(function () {

        $("#image123").change(function () {
            readURL(this);
        });
        /*
        $('form').submit(function (e) {
            e.preventDefault();
            var $this = $(this);

            var $data = {
                "__RequestVerificationToken": $('[name="__RequestVerificationToken"]').val(),
                Name: $("#Name").val(),
                TextField: $("#TextField").val(),
                CategoryId: $("#CategoryId").val(),
                PhotographyOfArticle: base64
            }

            $.ajax({
                type: "POST",
                url: '/Articles/Create',
                data: $data,
                success: function () { console.log("USPEO SI JEBO MATER"); },
                error: function () { console.log(":'("); }
                //dataType: dataType
            });

            console.log($data);

        });
        */
    });
    
</script>


<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Article</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhotographyOfArticle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="image123" accept="image/*" />
            <input name="PhotographyOfArticle" value="" type="hidden">
            <input name="MemeType" value="" type="hidden">
            <img src="#" id="preview" width="128" height="128" alt="Your uploaded picture should be displayed here." />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TextField, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TextField, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TextField, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" id="create123" class="btn btn-default btn123" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


